{"version":3,"sources":["currencyConverter/components/Component.js","currencyConverter/helpers/fetch.js","currencyConverter/index.js","currencyConverter/container/Container.js","App.js","index.js"],"names":["Component","setCurrency","currency","allRates","handleChange","inputValue","getResult","result","value","onChange","type","htmlFor","base","target","id","Object","keys","map","rate","symbols","onClick","toFixed","getFetch","token","options","headers","Authorization","url","search","a","searchString","URLSearchParams","fetch","response","json","fetchWithAuth","Container","useState","setAllRates","currentRates","setCurrentRates","setInputValue","setResult","useEffect","rates","values","parseFloat","pS","e","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OA4BeA,EA1BG,SAAC,GAAsF,IAAD,IAAnFC,EAAmF,EAAnFA,YAAaC,EAAsE,EAAtEA,SAAUC,EAA4D,EAA5DA,SAAUC,EAAkD,EAAlDA,aAAcC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OACvF,OAAO,gCACH,uBAAOC,MAAOH,EAAYI,SAAUL,EAAcM,KAAK,WACvD,gCACI,uBAAOC,QAAQ,QAAf,kBACA,wBAAQH,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAUU,KAAMH,SAAU,gBAAEI,EAAF,EAAEA,OAAF,OAAcZ,EAAY,CAAEW,KAAMC,EAAOL,SAAUM,GAAG,OAA/F,SACKX,IAAQ,UAAIY,OAAOC,KAAKb,UAAhB,aAAI,EAAuBc,KAAI,SAAAC,GACpC,OAAO,iCAAoBA,GAAPA,SAG5B,uBAAOP,QAAQ,MAAf,gBACA,wBAAQH,MAAK,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAUiB,QAASV,SAAU,gBAAEI,EAAF,EAAEA,OAAF,OAAcZ,EAAY,CAAEkB,QAASN,EAAOL,SAAWM,GAAG,KAAtG,SACKX,IAAQ,UAAIY,OAAOC,KAAKb,UAAhB,aAAI,EAAuBc,KAAI,SAAAC,GACpC,OAAO,iCAAoBA,GAAPA,YAKhC,8BACI,wBAAQE,QAASd,EAAjB,sBAGHC,GAAU,8BAAMA,EAAOc,QAAQ,SCxBlCC,EAAW,SAACC,GACd,IAAMC,EAAUD,EAAQ,CACpBE,QAAS,CACLC,cAAa,iBAAaH,KAE9B,KACJ,8CAAO,WAAOI,EAAKC,GAAZ,iBAAAC,EAAA,0DACCF,EADD,uBAEOG,EAAeF,EAAS,IAAIG,gBAAgBH,GAAU,GAF7D,SAGwBI,MAAM,GAAD,OAAIL,EAAJ,YAAWG,GAAgBN,GAHxD,cAGOS,EAHP,yBAIQA,EAASC,QAJjB,gCAMI,MANJ,2CAAP,yDAUEC,EAAgBb,EAAS,MCdhBc,ECKG,WAAO,IAAD,EACYC,mBAAS,CAAEzB,KAAM,MAAOO,QAAS,QAD7C,mBACbjB,EADa,KACHD,EADG,OAEYoC,mBAAS,MAFrB,mBAEblC,EAFa,KAEHmC,EAFG,OAGoBD,mBAAS,MAH7B,mBAGbE,EAHa,KAGCC,EAHD,OAIgBH,mBAAS,IAJzB,mBAIbhC,EAJa,KAIDoC,EAJC,OAKQJ,mBAAS,MALjB,mBAKb9B,EALa,KAKLmC,EALK,KAOpBC,qBAAU,WACN,sBAAC,8BAAAd,EAAA,sEAC0BM,EAAc,0CADxC,OACSF,EADT,OAEUW,EAASX,EAATW,MACPN,EAAYM,GAHf,0CAAD,KAMD,IAEHD,qBAAU,WACN,sBAAC,8BAAAd,EAAA,sEAC0BM,EAAc,yCAA0CjC,GADlF,OACS+B,EADT,OAEUW,EAASX,EAATW,MACPJ,EAAgBI,GAHnB,0CAAD,KAMD,CAAC1C,IAoBJ,OAAO,cAAC,EAAD,CAAWK,OAAQA,EAAQD,UANhB,WAAO,IAAD,EACLS,OAAO8B,OAAON,GAAtBrB,EADa,oBAEpBwB,EAAUI,WAAWzC,GAAca,IAIiBb,WAAYA,EAAYJ,YAlBtD,SAACO,GACnBA,GACAP,GAAY,SAAA8C,GAAE,kCAASA,GAAOvC,OAgB0EJ,aAX3F,SAAC4C,GAAO,IAClBxC,EAASwC,EAAEnC,OAAXL,MACPiC,EAAcjC,IAS0HN,SAAUA,EAAUC,SAAUA,EAAUoC,aAAcA,K,MCnCvLU,MAVf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,8BACE,cAAC,EAAD,SCJRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2f6eff38.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Component = ({ setCurrency, currency, allRates, handleChange, inputValue, getResult, result }) => {\r\n    return <div>\r\n        <input value={inputValue} onChange={handleChange} type=\"number\"/>\r\n        <div>\r\n            <label htmlFor=\"#from\">from</label>\r\n            <select value={currency?.base} onChange={({target}) => setCurrency({ base: target.value })} id=\"from\">\r\n                {allRates && Object.keys(allRates)?.map(rate => {\r\n                    return <option key={rate}>{rate}</option>\r\n                })}\r\n            </select>\r\n            <label htmlFor=\"#to\">to</label>\r\n            <select value={currency?.symbols} onChange={({target}) => setCurrency({ symbols: target.value })}  id=\"to\">\r\n                {allRates && Object.keys(allRates)?.map(rate => {\r\n                    return <option key={rate}>{rate}</option>\r\n                })}\r\n            </select>\r\n        </div>\r\n\r\n        <div>\r\n            <button onClick={getResult}>submit</button>\r\n        </div>\r\n\r\n        {result && <div>{result.toFixed(2)}</div>}\r\n    </div>\r\n}\r\n\r\nexport default Component\r\n","const getFetch = (token) => {\r\n    const options = token ? {\r\n        headers: {\r\n            Authorization : `Bearer ${token}`\r\n        }\r\n    } : null\r\n    return async (url, search) => {\r\n        if (url) {\r\n            const searchString = search ? new URLSearchParams(search) : '';\r\n            const response = await fetch(`${url}?${searchString}`, options);\r\n            return response.json();\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\nconst fetchWithAuth = getFetch(null);\r\n\r\nexport { fetchWithAuth };\r\nexport default getFetch;\r\n\r\n\r\n\r\n","import Container from './container/Container';\r\n\r\nexport default Container;\r\n","import React, {useState, useEffect} from 'react'\r\nimport Component from '../components/Component';\r\n\r\nimport { fetchWithAuth } from '../helpers/fetch.js';\r\nimport useFetch from '../hooks/useFetch';\r\n\r\n\r\nconst Container = () => {\r\n    const [currency, setCurrency] = useState({ base: 'USD', symbols: 'CZK' });\r\n    const [allRates, setAllRates] = useState(null);\r\n    const [currentRates, setCurrentRates] = useState(null);\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [result, setResult] = useState(null);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await fetchWithAuth('https://api.exchangeratesapi.io/latest');\r\n            const {rates} = response;\r\n            setAllRates(rates);\r\n        })()\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const response = await fetchWithAuth('https://api.exchangeratesapi.io/latest', currency);\r\n            const {rates} = response;\r\n            setCurrentRates(rates);\r\n        })();\r\n\r\n    }, [currency])\r\n\r\n    const handleSetCurrency = (value) => {\r\n        if (value) {\r\n            setCurrency(pS => ({...pS, ...value}));\r\n        }\r\n\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const {value} = e.target;\r\n        setInputValue(value)\r\n    }\r\n\r\n    const getResult = () => {\r\n        const [rate] = Object.values(currentRates);\r\n        setResult(parseFloat(inputValue) * rate)\r\n    }\r\n\r\n\r\n    return <Component result={result} getResult={getResult} inputValue={inputValue} setCurrency={handleSetCurrency} handleChange={handleChange} currency={currency} allRates={allRates} currentRates={currentRates} />;\r\n}\r\n\r\nexport default Container;\r\n","import React from 'react'\r\nimport Container from './currencyConverter'\r\n\r\nimport './assets/styles/App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <Container />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './assets/styles/index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}